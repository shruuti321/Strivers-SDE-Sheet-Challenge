class Solution {
public:
    bool f(vector<int>&ans,TreeNode* root,int x,vector<vector<int>>&v)
    {
        if(root==NULL)return false;
        ans.push_back(root->val);
        if(root->left==NULL and root->right==NULL)
        {
            v.push_back(ans);
            
        }
        if(f(ans,root->left,x,v)||f(ans,root->right,x,v))return true;
      
        ans.pop_back();
        return false;
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<int>ans;vector<vector<int>>v;
        int x=-1;
        f(ans,root,x,v);
        vector<string>fin;
        for(auto it:v)
        {
            string x="";
            for(int i=0;i<it.size();i++)

            {
                if(i==0)x+=to_string(it[i]);
                else x=x+"->"+to_string(it[i]);
            }
            fin.push_back(x);
        }
        return fin;
    }
};
