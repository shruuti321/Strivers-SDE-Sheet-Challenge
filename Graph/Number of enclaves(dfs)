void dfs(int row,int col,vector<vector<int>>Matrix,vector<vector<int>>&vis)
{   
    int n=vis.size();
    int m=vis[0].size();
    vis[row][col]=1;
    int drow[]={-1,1,0,0};
    int dcol[]={0,0,-1,1};
    for(int i=0;i<4;i++)
    {
        int nrow=row+drow[i];
        int ncol=col+dcol[i];
        if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && !vis[nrow][ncol] && Matrix[nrow][ncol]==0)
        {
            dfs(nrow,ncol,Matrix,vis);
        }
    }
}

int matrixTraps(int n,int m,vector<vector<int>> &Matrix)
{
    // Write your code here.
    vector<vector<int>>vis(n,vector<int>(m,0));
    int count=0;
    for(int i=0;i<m;i++)
    {
        if(Matrix[0][i]==0 && !vis[0][i])
        {
            dfs(0,i,Matrix,vis);
        }
        if(Matrix[n-1][i]==0 && !vis[n-1][i])
        {
            dfs(n-1,i,Matrix,vis);
        }
    }
    for(int i=0;i<n;i++)
    {
        if(Matrix[i][0]==0 && !vis[i][0])
        {
            dfs(i,0,Matrix,vis);
        }
        
        if(Matrix[i][m-1]==0 && !vis[i][m-1])
        {
            dfs(i,m-1,Matrix,vis);
        }
    }

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(!vis[i][j] && Matrix[i][j]==0)
            {
                count++;
            }
        }
    }
    return count;
}
