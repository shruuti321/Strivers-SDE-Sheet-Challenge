#include<bits/stdc++.h>
void dfs(int node,vector<int>&vis,vector<int>adj[],stack<int>&st)
{
    vis[node]=1;
    for(auto it:adj[node])
    {
        if(!vis[it])
        {
            dfs(it,vis,adj,st);
            
        }
    }
    st.push(node);

}

vector<int> topologicalSort(vector<vector<int>> &graph, int edges, int nodes) {
    // Write your code here!
    vector<int>adj[nodes];
    for(int i=0;i<edges;i++)
    {
        adj[graph[i][0]].push_back(graph[i][1]);
    }
    vector<int>vis(nodes,0);
    stack<int>st;
    for(int i=0;i<nodes;i++)
    {
        if(!vis[i])
        {
            dfs(i,vis,adj,st);
        }
    }
    vector<int>v;
    while(!st.empty())
    {
        v.push_back(st.top());
        st.pop();
    }
    return v;
}
