vector < vector < int > > nearest(vector < vector < int >> & mat, int n, int m) {
    // Write your code here.
    vector<vector<int>>vis(n,vector<int>(m,0));
    vector<vector<int>>dist(n,vector<int>(m,0));
    queue<pair<pair<int,int>,int>>q;
    for(int i=0;i<n;i++)
    {
       for(int j=0;j<m;j++)
       {
           if(mat[i][j]==1)
           {
               q.push({{i,j},0});
               vis[i][j]=1;
           }
       }
    }
    while(!q.empty())
    {
        int row=q.front().first.first;
        int col=q.front().first.second;
        int dis=q.front().second;
        dist[row][col]=dis;

        q.pop();
        int drow[]={-1,1,0,0};
        int dcol[]={0,0,-1,1};
        for(int i=0;i<4;i++)
        {
            int nrow=row+drow[i];
            int ncol=col+dcol[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && !vis[nrow][ncol] && mat[nrow][ncol]==0)
            {
                q.push({{nrow,ncol},dis+1});
                vis[nrow][ncol]=1;
            }
        }
    }
    return dist;
}
