#include<bits/stdc++.h>

string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    // Write your code here.
    vector<int>vis(n+1,0);
    vector<vector<int>> graph(n + 1, vector<int>());

    for (int i = 0; i < m; i++)
    {
        graph[edges[i][1]].push_back(edges[i][0]);
        graph[edges[i][0]].push_back(edges[i][1]);
    }

    for(int i=1;i<=n;i++)
    {
           if(!vis[i]){ 
               queue<pair<int,int>>q;
               q.push({i,-1});
        vis[i]=1;
        while(!q.empty())
        {
            int node=q.front().first;
            int par=q.front().second;
            q.pop();
            for(auto it:graph[node])
            {
                if(!vis[it])
                {
                    q.push({it,node});
                    vis[it]=1;
                }
                else if(it!=par)
                {
                    return "Yes";
                }
            }
        }
    
           }
    }
    return "No";
    
    
}



