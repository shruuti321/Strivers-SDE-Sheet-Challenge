#include <bits/stdc++.h>
int f(int i,int j,vector<vector<int>>& triangle,vector<vector<int>>& dp)
{	
	int n=triangle.size();
	if(i==n-1)
	{
		return triangle[i][j];
	}
	if(dp[i][j]!=-1)return dp[i][j];
	if(i>n-1 || j>i)return 1e9;
	int up=triangle[i][j]+f(i+1,j,triangle,dp);
	int diag=triangle[i][j]+f(i+1,j+1,triangle,dp);
	return dp[i][j]=min(up,diag);

} 
int minimumPathSum(vector<vector<int>>& triangle, int n){
	// Write your code here.
	vector<vector<int>>dp(n,vector<int>(n,-1));
	return f(0,0,triangle,dp);

}
