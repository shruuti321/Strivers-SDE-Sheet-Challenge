#include <bits/stdc++.h> 
int f(int row,int col,vector<vector<int>> &grid,vector<vector<int>> &dp)
{
    if(row==0 and col==0)
    {
        return grid[row][col];
    }
    if(row<0 || col<0) return 1e9;
    //int up=0;
    //int left=0;
    if(dp[row][col]!=-1)return  dp[row][col];
    int up=grid[row][col]+f(row-1,col,grid,dp);
    int left=grid[row][col]+f(row,col-1,grid,dp);
   
    return dp[row][col]=min(up,left);

}
int minSumPath(vector<vector<int>> &grid) {
    // Write your code here.
    int n=grid.size();
    int m=grid[0].size();
    vector<vector<int>>dp(n,vector<int>(m,-1));
    //return f(n-1,m-1,grid,dp);
   
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {   
            int up=0;
            int left=0;
            if(i==0 and j==0)
            {
                dp[i][j]=grid[i][j];
                continue;
            }
            if(i>0)up=grid[i][j]+dp[i-1][j];
            else up=grid[i][j]+1e9;
            if(j>0)left=grid[i][j]+dp[i][j-1];
            else left=grid[i][j]+1e9;
            dp[i][j]=min(up,left);
        }
    }
    return dp[n-1][m-1];

}
