vector<int> divisibleSet(vector<int> &arr)
{
    // Write your code here.
    sort(arr.begin(),arr.end());
    int n=arr.size();
    vector<int>dp(n,1);
    vector<int>hash(n);

    for(int i=0;i<n;i++)
    {   
        hash[i]=i;
        for(int j=0;j<i;j++)
        {
            if(arr[i]%arr[j]==0)
            {
                if(dp[i]<dp[j]+1)
                {
                    dp[i]=dp[j]+1;
                    hash[i]=j;
                }
            }
        }
    }

    int maxi=0;
    int ind=-1;
    for(int i=0;i<n;i++)
    {
        if(dp[i]>maxi)
        {
            maxi=dp[i];
            ind=i;
        }
    }

    vector<int>temp;
    int i=ind;
    while(i>=0)
    {
        temp.push_back(arr[i]);
        i=hash[i];
        maxi--;
        if(maxi==0)
            break;
    }
    return temp;
}
