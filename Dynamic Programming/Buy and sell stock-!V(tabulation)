#include <bits/stdc++.h> 
int f(int ind,int buy,int cap,vector<int>prices,vector<vector<vector<int>>>&dp)
{
    if(ind==prices.size())return 0;
    if(cap==0)return 0;
    if(dp[ind][buy][cap]!=-1)return  dp[ind][buy][cap];
    int profit;
    if(buy)
    {
        profit=max(-prices[ind]+f(ind+1,0,cap,prices,dp),0+f(ind+1,1,cap,prices,dp));
    }
    else 
    {
        profit=max(prices[ind]+f(ind+1,1,cap-1,prices,dp),0+f(ind+1,0,cap,prices,dp));
    }
    return dp[ind][buy][cap]=profit;

}

int maximumProfit(vector<int> &prices, int n, int k)
{
    // Write your code here.
   
    vector<vector<vector<int>>>dp(n+1,vector<vector<int>>(2,vector<int>(k+1,0)));
    // return f(0,1,k,prices,dp);
    for(int ind=n-1;ind>=0;ind--)
    {
        for(int buy=0;buy<=1;buy++)
        {
            for(int cap=1;cap<=k;cap++)
            {   
             
                 if(buy)
                {
                    dp[ind][buy][cap]=max(-prices[ind]+dp[ind+1][0][cap],0+dp[ind+1][1][cap]);
                }
                else 
                {
                    dp[ind][buy][cap]=max(prices[ind]+dp[ind+1][1][cap-1],0+dp[ind+1][0][cap]);
                }
                //  dp[ind][buy][cap]=profit;
            }

        }
    }
        return dp[0][1][k];
     
    
}
