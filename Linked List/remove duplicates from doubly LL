/**
 * Definition of doubly linked list:
 * class Node {
 * public:
 *      int data;
 *      Node *prev;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->prev = NULL;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next, Node *prev) {
 *          this->data = data;
 *          this->prev = prev;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node * removeDuplicates(Node *head)
{
    // Write your code here
    if(head==NULL || head->next==NULL)
    {
        return head;
    }
    Node *temp=head->next;
    while(temp!=NULL)
    {
        if(temp->prev->data==temp->data)
        {
            Node* dup=temp->prev;
            if(temp->next!=NULL)
           { dup->next=temp->next;
            temp->next->prev=dup;
            temp=dup->next;
           }
           else {
               dup->next=NULL;
               break;
           }
        }
        else temp=temp->next;
    }
    return head;
}
