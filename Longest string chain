bool check(string &s1,string &s2)
{   
    if(s1.size()!=s2.size()+1)return false;
    int x=0;
    int y=0;
    while(x<s1.size())
    {
        if(s1[x]==s2[y])
        {
            x++;
            y++;
        }
        else{
            x++;
        }
    }
    if(x==s1.size() and y==s2.size())return true;
    return false;
}
bool comp(string &s1,string &s2)
{
    return s1.size()<s2.size();
}
int longestStrChain(vector<string> &arr){
    // Write your code here.
    int n=arr.size();
    sort(arr.begin(),arr.end(),comp);
    vector<int>dp(n,1);
    int maxi=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<i;j++)
        {
            if(check(arr[i],arr[j]))
            {
                if(dp[i]<dp[j]+1)
                {
                    dp[i]=dp[j]+1;
                }
            }
        }
        maxi=max(maxi,dp[i]);
    }
   return maxi;
}
