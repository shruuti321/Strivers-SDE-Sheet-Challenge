/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<pair<int,ListNode*>,vector<pair<int,ListNode*>>,greater<pair<int,ListNode*>>>pq;
        if(lists.size()==0)return NULL;
        for(int i=0;i<lists.size();i++)
        {
             if (lists[i] != NULL) {
            ListNode* temp=lists[i];
            while(temp!=NULL)
            {
                pq.push({temp->val,temp});
                temp=temp->next;
            }
             }
        }   
        if(pq.empty())return NULL;
            ListNode* start=pq.top().second;
            ListNode* head=start;
            pq.pop();
            while(!pq.empty())
            {
                start->next=pq.top().second;
                start=start->next;
                pq.pop();
            }
            start->next=NULL;
            return head;
        
    }
};
