/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        int flag=0;
        ListNode* slow=head;
        ListNode* fast=head;
        ListNode* entry=head;
        while(fast!=NULL && fast->next!=NULL)
        {
            fast=fast->next->next;
            slow=slow->next;
            if(fast==slow)
            {   
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            return NULL;
        }
        while(slow!=entry)
        {
            slow=slow->next;
            entry=entry->next;
        }
        return slow;
    }
};
