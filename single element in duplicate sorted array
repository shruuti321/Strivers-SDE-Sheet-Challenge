int check(vector<int>&arr,int low,int high)
{
	if(low>high)return -1;

	int mid=(low+high)/2;
	if(arr[mid]!=arr[mid-1] && arr[mid]!=arr[mid+1])
	return arr[mid];
	else{
		 if((mid%2==0 and arr[mid]==arr[mid+1])||(mid%2!=0 and arr[mid]==arr[mid-1]))
	check(arr,mid+1,high);
		else 
		check(arr,low,mid-1);
	}

}


int singleNonDuplicate(vector<int>& arr)
{
	// Write your code here
	int n=arr.size();
	if(n==1)return arr[0];
	if(arr[0]!=arr[1])return arr[0];
	if(arr[n-1]!=arr[n-2])return arr[n-1];
	return check(arr,1,n-2);
}
